            Введение

Мы начинаем курс посвященный работе с реляционными базами данных, наиболее распространенной моделью
хранения данных. Данный курс будет полезен как разработчикам и инженерам по тестированию, поскольку
практически каждое приложение работает с данными и обращается к различным СУБД, так и аналитикам для
извлечения, фильтрации итрансформации данных.
На первом уроке мы рассмотрим какие инструменты существуют, вспомним основные понятия реляционных баз
данных. Обратимся к истории возникновения СУБД и языка SQL поговорим про его особенности, рассмотрим
процесс установки СУБД MySQL Workbench и напишем запросы выборки данных. На следующих уроках курса
будем знакомится более детально с операторами языка SQL и учится правильно и эффективно применять их.

                Термины лекции

Система управления базами данных, сокр. СУБД (англ. Database Management System, сокр. DBMS) —
        совокупность программных и лингвистических средств общего или специального назначения,
        обеспечивающих управление созданием и использованием баз данных.
Реляционные базы данных (от англ. Relation – связь) — базы данных, в которых данные распределены по
        отдельным, но связанным между собой таблицам.
Кортеж (tuple) — это множество пар {имя аттрибута, значение}.

Отношение (relation) — это множество кортежей, соответствующих одной схеме.

Первичный ключ (Primary key) – поле(или набор полей) позволяющее однозначно идентифицировать запись в БД.
                               Если ключ состоит из нескольких полей его называют составным.

Суррогатный ключ — автоматически сгенерированное уникальное поле, никак не связанное с информационным
                   содержанием записи.

Естественный ключ — ключ состоящий из информационных полей таблицы.

SQL — Структурированный язык запросов

Декларативный язык программирования — язык программирования описывающий результат действия, не
                                      описывающий шаги для получения результата.

Оператор (statement) — это наименьшая автономная часть языка программирования, команда или набор команд.

ODBC (Open Database Connectivity) — программный интерфейс (API) доступа к базам данных.



                Понятия базы данных, СУБД                                                       -  50                                                
                Язык SQL                                                                        - 
                Основные операторы SQL                                                          - 
                Основные компоненты СУБД, установка                                             -
                Клиентские приложения для работы с СУБД 
                Работа с БД используя графический интерфейс,создание и просмотр объектов        - 
                Запрос выборки данных с простыми условиями                                      -

                Понятия базы данных, СУБД
Вспомним какие основные задачи решают базы данных:
        1.хранение, данные должны быть надежно сохранены
        2.получение данных, должны быть средства чтения данных обработка данных
Базу данных можно вести и на листе бумаги, бумажные ежедневники и блокноты также являются базами данных,
на некоторых кстати нанесены по краям цветовые или буквенные метки, что по сути является индексом для
упрощения поиска данных. Т.е. под базой данных понимаются непосредственно сами данные.
Когда мы говорим про данные на жестком диске компьютера, например, то нам требуются специализированные
программы для работы с ними, в русскоязычной терминологии класс таких программ получил название —
система управления базами данных, сокращенно СУБД. В англоязычной терминологии DBMS - Database Management
System.
На сегодняшний день существует огромное множество различных СУБД от коммерческих до открытых
разрабатываемых open-source сообществом, использующих разные модели хранения данных, различные технологии
поиска и хранения данных. На сайте db-engines.com ежемесячно составляется рейтинг СУБД, сейчас в нем более
350 СУБД (https://db-engines.com/en/ranking). Давайте посмотрим на первые 20 из них:
О том, как составляется рейтинг можно прочитать на сайте, для нас важно отметить разнообразие СУБД и
большой отрыв первый пятерки. Ещё одна важная деталь — это различные используемые модели данных, мы видим
тут много реляционных (используют структурирование данных по таблицам), меньше документно-ориентированных
(данные хранятся в виде отдельных документов), графовых (данные выстраиваются в виде связанных графов) и
других СУБД, некоторые СУБД поддерживают работу с различными моделями данных.
В этом курсе мы рассмотрим работу с реляционными базами данных. Данная модель получила наиболее широкое
распространение она основана на математическом аппарате и покрывает большую часть прикладных задач, новые
- постреляционные модели часто строятся на основе реляционной модели. Сначала познакомимся с наиболее
употребляемыми понятиями:

Реляционные базы данных (от англ. Relation – связь) — базы      данных, в которых данные распределены
по отдельным, но связанным между собой таблицам.
Иногда вам могут встретится термины из реляционной алгебры, поэтому давайте их приведем и соотнесем с
применяемыми на практике:

Кортеж (tuple) — это множество пар {имя аттрибута, значение}. (например {Фамилия, Петров}, {Телефон,
+7921-123-56-69}) — фактически это строка таблицы, где имена атрибутов — это столбцы таблицы.

Отношение (relation) - это множество кортежей, соответствующих одной схеме. например:
{
{ {Фамилия, Петров}, {Телефон, +7921-123-56-69}},
{ {Фамилия, Смирнов}, {Телефон, +7956-987-78-21}},
{ {Фамилия, Чехов}, {Телефон, +7955-968-24-36}}
}
Такое множество может быть визуально представлено в виде таблицы, где описание схемы будет определено
столбцами таблицы:

Небольшой пример на кортежи:
В таблице “Сотрудники” имеется кортеж данных:
{ [Идентиф_код], '2931123455' }
{ [Фамилия_и_инициалы], 'Петренко П.П.' }

Идентиф_код     Фамилия_и_инициалы
2931123455      Петренко П.П.

Первичный ключ (Primary key) – поле(или набор полей) позволяющее однозначно идентифицировать запись в БД.
Если ключ состоит из нескольких полей его называют составным.

Например, в таблице номеров телефонов — номер телефона может быть первичным ключом.
Не всегда в таблице по существующим данным можно однозначно идентифицировать запись, даже используя
несколько полей, также значения этих полей могут изменится (изменение первичного ключа может повлечь
изменение во многих связанных таблицах). В таких случаях часто используются автоматически генерируемые
атрибуты добавляемые к таблице, например числовые последовательности увеличивающиеся при каждой вставке
в таблицу. (в некоторых СУБД их называют автоинкрементом).

Суррогатный ключ - автоматически сгенерированное уникальное поле, никак не связанное с информационным
содержанием записи.

Естественный ключ — ключ, состоящий из информационных полей таблицы.

У таблицы может быть несколько ключей или не быть вообще, если ключей несколько то самый короткий из
ключей выбирают в качестве первичного (это может быть как естественный так и суррогатный ключ).

Давайте рассмотрим эти понятия на примере задачи по созданию базы обучающихся, пример списка сведений о
студентах, подумайте какие ключи тут можно выделить подумайте 1-2 минуты и разберем варианты:
Думаю что тут всё достаточно очевидно, Серия и номер паспорта — хороший кандидат для первичного ключа
(потенциальный ключ), набор полей Фамилия Имя и год рождения — скорее не будет уникальным с увеличением
данных. Вернемся к набору из полей “Серия” и “Номер паспорта” посмотрим на недостатки этого
естественного первичного ключа:
        1.может изменятся
        2.может отсутствовать
        3.возможны технические ошибки при вводе, опечатки приводящие к дубликатам
        4. достаточно широкий (два текстовых поля) — почему это важная характеристика? Если в базе много
        таблиц будут ссылаться на эту таблицу, то они должны будут использовать ключ таблицы, т. е.
        хранить эти поля. Таблица телефонов в данном случае будет выглядеть примерно так:

        стр 7 остоновился

